// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webbuilder.api.data;

#nullable disable

namespace webbuilder.api.Migrations
{
    [DbContext(typeof(ElementStoreContext))]
    [Migration("20250304153656_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webbuilder.api.models.Element", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "content");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "href");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isSelected");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "parentId");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "projectId");

                    b.Property<string>("Src")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "src");

                    b.Property<string>("Styles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "styles");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "x");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "y");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Elements");

                    b.HasDiscriminator<string>("Type").HasValue("Text");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Content = "Hello, World!",
                            IsSelected = false,
                            ProjectId = "1",
                            Styles = "{\"color\":\"red\",\"font-size\":\"12px\"}",
                            Type = "Text",
                            X = 10,
                            Y = 20
                        },
                        new
                        {
                            Id = "3",
                            Content = "Nested Text",
                            IsSelected = false,
                            ParentId = "2",
                            ProjectId = "1",
                            Styles = "{\"color\":\"blue\"}",
                            Type = "Text",
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = "5",
                            Content = "Deeply Nested Text",
                            IsSelected = false,
                            ParentId = "4",
                            ProjectId = "1",
                            Styles = "{\"font-weight\":\"bold\"}",
                            Type = "Text",
                            X = 5,
                            Y = 5
                        });
                });

            modelBuilder.Entity("webbuilder.api.models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Description = "A sample project with elements",
                            Name = "Sample Project",
                            OwnerId = "1"
                        });
                });

            modelBuilder.Entity("webbuilder.api.models.FrameElement", b =>
                {
                    b.HasBaseType("webbuilder.api.models.Element");

                    b.HasDiscriminator().HasValue("Frame");

                    b.HasData(
                        new
                        {
                            Id = "2",
                            IsSelected = false,
                            ProjectId = "1",
                            Styles = "{\"border\":\"1px solid black\"}",
                            Type = "Frame",
                            X = 50,
                            Y = 100
                        },
                        new
                        {
                            Id = "4",
                            IsSelected = false,
                            ParentId = "2",
                            ProjectId = "1",
                            Styles = "{\"background\":\"yellow\"}",
                            Type = "Frame",
                            X = 20,
                            Y = 20
                        });
                });

            modelBuilder.Entity("webbuilder.api.models.Element", b =>
                {
                    b.HasOne("webbuilder.api.models.FrameElement", null)
                        .WithMany("Elements")
                        .HasForeignKey("ParentId");

                    b.HasOne("webbuilder.api.models.Project", null)
                        .WithMany("Elements")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("webbuilder.api.models.Project", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("webbuilder.api.models.FrameElement", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
